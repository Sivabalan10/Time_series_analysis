{"cells":[{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6480,"status":"ok","timestamp":1743479815489,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"dIwAxqc8b7VG","outputId":"68813a69-b690-4235-f583-40b69aac6ce1"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[31mERROR: Ignored the following versions that require a different python version: 1.21.2 Requires-Python \u003e=3.7,\u003c3.11; 1.21.3 Requires-Python \u003e=3.7,\u003c3.11; 1.21.4 Requires-Python \u003e=3.7,\u003c3.11; 1.21.5 Requires-Python \u003e=3.7,\u003c3.11; 1.21.6 Requires-Python \u003e=3.7,\u003c3.11\u001b[0m\u001b[31m\n","\u001b[0m\u001b[31mERROR: Could not find a version that satisfies the requirement numpy==1.21.6 (from versions: 1.3.0, 1.4.1, 1.5.0, 1.5.1, 1.6.0, 1.6.1, 1.6.2, 1.7.0, 1.7.1, 1.7.2, 1.8.0, 1.8.1, 1.8.2, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.10.0.post2, 1.10.1, 1.10.2, 1.10.4, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.12.0, 1.12.1, 1.13.0, 1.13.1, 1.13.3, 1.14.0, 1.14.1, 1.14.2, 1.14.3, 1.14.4, 1.14.5, 1.14.6, 1.15.0, 1.15.1, 1.15.2, 1.15.3, 1.15.4, 1.16.0, 1.16.1, 1.16.2, 1.16.3, 1.16.4, 1.16.5, 1.16.6, 1.17.0, 1.17.1, 1.17.2, 1.17.3, 1.17.4, 1.17.5, 1.18.0, 1.18.1, 1.18.2, 1.18.3, 1.18.4, 1.18.5, 1.19.0, 1.19.1, 1.19.2, 1.19.3, 1.19.4, 1.19.5, 1.20.0, 1.20.1, 1.20.2, 1.20.3, 1.21.0, 1.21.1, 1.22.0, 1.22.1, 1.22.2, 1.22.3, 1.22.4, 1.23.0, 1.23.1, 1.23.2, 1.23.3, 1.23.4, 1.23.5, 1.24.0, 1.24.1, 1.24.2, 1.24.3, 1.24.4, 1.25.0, 1.25.1, 1.25.2, 1.26.0, 1.26.1, 1.26.2, 1.26.3, 1.26.4, 2.0.0, 2.0.1, 2.0.2, 2.1.0rc1, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0rc1, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4)\u001b[0m\u001b[31m\n","\u001b[0m\u001b[31mERROR: No matching distribution found for numpy==1.21.6\u001b[0m\u001b[31m\n","\u001b[0mRequirement already satisfied: pmdarima in /usr/local/lib/python3.11/dist-packages (2.0.4)\n","Requirement already satisfied: joblib\u003e=0.11 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.4.2)\n","Requirement already satisfied: Cython!=0.29.18,!=0.29.31,\u003e=0.29 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (3.0.12)\n","Requirement already satisfied: numpy\u003e=1.21.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.2.4)\n","Requirement already satisfied: pandas\u003e=0.19 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.2.2)\n","Requirement already satisfied: scikit-learn\u003e=0.22 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.6.1)\n","Requirement already satisfied: scipy\u003e=1.3.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.14.1)\n","Requirement already satisfied: statsmodels\u003e=0.13.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (0.14.4)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.3.0)\n","Requirement already satisfied: setuptools!=50.0.0,\u003e=38.6.0 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (75.2.0)\n","Requirement already satisfied: packaging\u003e=17.1 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (24.2)\n","Requirement already satisfied: python-dateutil\u003e=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas\u003e=0.19-\u003epmdarima) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas\u003e=0.19-\u003epmdarima) (2025.2)\n","Requirement already satisfied: tzdata\u003e=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas\u003e=0.19-\u003epmdarima) (2025.2)\n","Requirement already satisfied: threadpoolctl\u003e=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn\u003e=0.22-\u003epmdarima) (3.6.0)\n","Requirement already satisfied: patsy\u003e=0.5.6 in /usr/local/lib/python3.11/dist-packages (from statsmodels\u003e=0.13.2-\u003epmdarima) (1.0.1)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil\u003e=2.8.2-\u003epandas\u003e=0.19-\u003epmdarima) (1.17.0)\n"]}],"source":["!pip install numpy==1.21.6\n","!pip install pmdarima --no-cache-dir\n"]},{"cell_type":"code","execution_count":26,"metadata":{"collapsed":true,"executionInfo":{"elapsed":294,"status":"ok","timestamp":1743480324810,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"P-H9kTox4BIz"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from statsmodels.tsa.stattools import adfuller\n","from statsmodels.tsa.arima.model import ARIMA\n","from statsmodels.tsa.statespace.sarimax import SARIMAX\n","from sklearn.metrics import mean_absolute_error"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1743480395215,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"IrOL4Gb_4PPF","outputId":"44f8b211-35d5-4b1b-bb79-6ea8acdd692a"},"outputs":[{"name":"stdout","output_type":"stream","text":["                Value\n","Date                 \n","2010-01-01  10.725301\n","2010-01-02  10.836400\n","2010-01-03  14.795625\n","2010-01-04   8.322568\n","2010-01-05   9.398199\n","                 Value\n","Date                  \n","2024-12-23   97.927073\n","2024-12-24  102.508180\n","2024-12-25  101.657011\n","2024-12-26   97.518754\n","2024-12-27   98.954531\n"]}],"source":["# Generate Trend-based Dataset (ARIMA suitable)\n","dates = pd.date_range(start='2010-01-01', periods=15*365, freq='D')\n","trend = np.linspace(10, 100, len(dates)) + np.random.normal(0, 3, len(dates))\n","df_trend = pd.DataFrame({'Date': dates, 'Value': trend})\n","df_trend.set_index('Date', inplace=True)\n","print(df_trend.head())\n","print(df_trend.tail())"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1743480439697,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"oe6aZEPncXr1","outputId":"7da8f0e0-6a2d-4032-e399-c32c2dad76bb"},"outputs":[{"name":"stdout","output_type":"stream","text":["               Value\n","Date                \n","2010-01-01  1.338940\n","2010-01-02  0.409627\n","2010-01-03  0.302611\n","2010-01-04 -2.292819\n","2010-01-05 -0.026389\n","               Value\n","Date                \n","2024-12-23 -3.771825\n","2024-12-24 -4.088934\n","2024-12-25 -3.538106\n","2024-12-26 -1.581112\n","2024-12-27 -3.317863\n"]}],"source":["# Generate Seasonal Dataset (SARIMA suitable)\n","seasonality = 10 * np.sin(np.linspace(0, 50, len(dates))) + np.random.normal(0, 2, len(dates))\n","df_seasonal = pd.DataFrame({'Date': dates, 'Value': seasonality})\n","df_seasonal.set_index('Date', inplace=True)\n","print(df_seasonal.head())\n","print(df_seasonal.tail())"]},{"cell_type":"code","execution_count":34,"metadata":{"executionInfo":{"elapsed":264,"status":"ok","timestamp":1743480474029,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"mtex977Oh_EJ"},"outputs":[],"source":["# Check Stationarity (ADF Test)\n","def adf_test(series):\n","    result = adfuller(series)\n","    print(f\"ADF Statistic: {result[0]}\")\n","    print(f\"p-value: {result[1]}\")\n","    if result[1] \u003c 0.05:\n","        print(\"The series is stationary.\")\n","    else:\n","        print(\"The series is non-stationary.\")"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":675,"status":"ok","timestamp":1743480496813,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"YKJG_Ws_iMgT","outputId":"2709d908-2c0c-443c-8b9c-fe1ec6d39ec1"},"outputs":[{"name":"stdout","output_type":"stream","text":["Trend Dataset ADF Test:\n","ADF Statistic: -0.1151840761266421\n","p-value: 0.9479049815852555\n","The series is non-stationary.\n","\n","Seasonal Dataset ADF Test:\n","ADF Statistic: -2.810249809854117\n","p-value: 0.056824506092857364\n","The series is non-stationary.\n"]}],"source":["print(\"Trend Dataset ADF Test:\")\n","adf_test(df_trend['Value'])\n","print(\"\\nSeasonal Dataset ADF Test:\")\n","adf_test(df_seasonal['Value'])"]},{"cell_type":"code","execution_count":36,"metadata":{"executionInfo":{"elapsed":39,"status":"ok","timestamp":1743480540309,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"UW6dVR-ciR9z"},"outputs":[],"source":["# Differencing for Stationarity\n","df_trend_diff = df_trend.diff().dropna()\n","df_seasonal_diff = df_seasonal.diff().dropna()"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":571,"status":"ok","timestamp":1743480564780,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"qcFalbbIicvU","outputId":"36cf84e7-77fc-4038-e28f-f9a9ab0a2507"},"outputs":[{"name":"stdout","output_type":"stream","text":["Trend Dataset ADF Test:\n","ADF Statistic: -21.390250487339607\n","p-value: 0.0\n","The series is stationary.\n","\n","Seasonal Dataset ADF Test:\n","ADF Statistic: -9.689984375953163\n","p-value: 1.1433283686890142e-16\n","The series is stationary.\n"]}],"source":["print(\"Trend Dataset ADF Test:\")\n","adf_test(df_trend_diff['Value'])\n","print(\"\\nSeasonal Dataset ADF Test:\")\n","adf_test(df_seasonal_diff['Value'])"]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":787,"status":"ok","timestamp":1743480600986,"user":{"displayName":"SIVABALAN T 221501138","userId":"01358502363580948831"},"user_tz":-330},"id":"7G4PgkFOiilU","outputId":"a75ecd1f-f7ab-4c1a-de7f-29e3daf2e7c8"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  self._init_dates(dates, freq)\n"]}],"source":["# Fit ARIMA Model on Trend Data\n","arima_model = ARIMA(df_trend['Value'], order=(1,1,1))\n","arima_result = arima_model.fit()\n","arima_forecast = arima_result.forecast(steps=30)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"G5BJcTdkiohD"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency D will be used.\n","  self._init_dates(dates, freq)\n"]}],"source":["# Fit SARIMA Model on Seasonal Data\n","sarima_model = SARIMAX(df_seasonal['Value'], order=(1,1,1), seasonal_order=(1,1,1,365))\n","sarima_result = sarima_model.fit()\n","sarima_forecast = sarima_result.forecast(steps=30)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H1_JssmMit8E"},"outputs":[],"source":["# Evaluate Performance\n","arima_mae = mean_absolute_error(df_trend['Value'][-30:], arima_forecast)\n","sarima_mae = mean_absolute_error(df_seasonal['Value'][-30:], sarima_forecast)\n","print(f\"ARIMA MAE: {arima_mae}\")\n","print(f\"SARIMA MAE: {sarima_mae}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YpmPZHYoiyNT"},"outputs":[],"source":[]}],"metadata":{"colab":{"authorship_tag":"ABX9TyObaLlgUW9Lpkdrr6rKxq/f","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}